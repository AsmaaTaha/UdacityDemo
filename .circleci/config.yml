# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps: 
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file CloudFormationTemplate.yaml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1 
        - destroy_environment               
  ConfigureInfrastructure:
     docker:
       - image: circleci/python:3.8 
     steps:
       - checkout
       - add_ssh_keys:
            fingerprints: ["27:8f:98:60:7c:9d:32:f9:dc:4d:34:60:7b:94:09:35"] 
       - run: 
           name: Install Ansible
           command: |
            pip install ansible

       - run:
           name: Run Playbook and Configure server
           command: | 
            ansible-playbook -i inventory.txt main.yaml  
  SmokeTest:
    docker: 
      - image: alpine:latest
    steps:
      - checkout
      - run: apk add --update curl
      - run: 
         name: smoke test
         command: |
          URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi

  create_and_deploy_front_end:
     docker:
       - image: amazon/aws-cli
     steps:
       - checkout
       - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
             aws cloudformation deploy \
             --template-file bucket.yml \
             --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
             --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  configureInfrastructureWorkflow4:
    jobs:
      - create_and_deploy_front_end
    
